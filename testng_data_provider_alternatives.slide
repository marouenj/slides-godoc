Alternatives to TestNG @DataProvider
Marouen Jilani

* Agenda

- Logic to test
- TestNG @DataProvider
- JUnit parameterized tests
- JUnit @DataProvider plugin
- JUnit @DataPoints

* Logic to test

We'll use this for comparing testing frameworks

    public class Util {
        public static int sum(Integer... vals) {
            int s = 0;
            for (Integer val : vals) {
                s += val;
            }
            return s;
        }
    }

* TestNG @DataProvider / Overview #1

    public class UtilTest {

        @DataProvider(name = "shouldSumUp")
        public Object[][] shouldSumUp() {
            return new Object[][] {
                    {
                            new Integer[] {0, 0},
                            0
                    },
                    {
                            new Integer[] {1, 1},
                            2
                    },
                    {
                            new Integer[] {1, 2, 3, 4},
                            10
                    },
            };
        }
        // code continues next slide

* TestNG @DataProvider / Overview #2

        @Test(dataProvider = "shouldSumUp")
        public void shouldSumUp(Integer[] vals, Integer expected) {
            Assert.assertEquals(Util.sum(vals), (int) expected);
        }
    }

* TestNG @DataProvider / Pros

- Possibility to define multiple data providers in the same class
- Any test can reference any data provider
- Can easily scale if every test sees its own data provider in isolation

* JUnit parameterized testing / Overview #1

* JUnit @DataProvider plugin

* JUnit @DataPoints
